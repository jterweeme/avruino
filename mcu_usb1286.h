#ifndef _MCU_USB1286_H_
#define _MCU_USB1286_H_

#include "types.h"

#define zei()  __asm__ __volatile__ ("sei" ::: "memory")
#define zli()  __asm__ __volatile__ ("cli" ::: "memory")

#define INTR0 __vector_1()
#define USB_GEN __vector_10()
#define USB_COM __vector_11()
#define TIMER2_OVF __vector_15()
#define TIMER1_OVF __vector_20()
#define TIMER0_COMPA __vector_21()
#define TIMER0_COMPB __vector_22()
#define TIMER0_OVF __vector_23()
#define USART_RX __vector_25()

static constexpr uint8_t 
    porta_base = 0x20,
        pina = porta_base + 0,
        ddra = porta_base + 1,
        porta = porta_base + 2,
            pa0 = 0, pa1 = 1, pa2 = 2, pa3 = 3, pa4 = 4, pa5 = 5, pa6 = 6, pa7 = 7,
    portb_base = 0x23,
        pinb = portb_base + 0,
        ddrb = portb_base + 1,
        portb = portb_base + 2,
            pb0 = 0, pb1 = 1, pb2 = 2, pb3 = 3, pb4 = 4, pb5 = 5, pb6 = 6, pb7 = 7,
    portc_base = 0x26,
        pinc = portc_base + 0,
        ddrc = portc_base + 1,
        portc = portc_base + 2,
            pc0 = 0, pc1 = 1, pc2 = 2, pc3 = 3, pc4 = 4, pc5 = 5, pc6 = 6, pc7 = 7,
    portd_base = 0x29,
        pind = portd_base + 0,
        ddrd = portd_base + 1,
        portd = portd_base + 2,
            pd0 = 0, pd1 = 1, pd2 = 2, pd3 = 3, pd4 = 4, pd5 = 5, pd6 = 6, pd7 = 7,
    porte_base = 0x2c, 
        pine = porte_base + 0,
        ddre = porte_base + 1,
        porte = porte_base + 2,
            pe0 = 0, pe1 = 1, pe2 = 2, pe3 = 3, pe4 = 4, pe5 = 5, pe6 = 6, pe7 = 7,
    portf_base = 0x35,
        pinf = portf_base + 0,
        ddrf = portf_base + 1,
        portf = portf_base + 2,
    tifr0 = 0x35, tov0 = 0, ocf0a = 1, ocf0b = 2,
    tifr1 = 0x36, tov1 = 0, ocf1a = 1, ocf1b = 2, ocf1c = 3, icf1 = 5,
    tifr2 = 0x37, tov2 = 0, ocf2a = 1, ocf2b = 2,
    tifr3 = 0x38, tov3 = 0, ocf3a = 1, ocf3b = 2, ocf3c = 3, icf3 = 5,
    pcifr = 0x3b,
    eifr = 0x3c,
    eimsk = 0x3d, int0 = 0, int1 = 1, int2 = 2, int3 = 3, int4 = 4, int5 = 5, int6 = 6, int7 = 7,
    gpior0 = 0x3e,
    eecr = 0x3f, eere = 0, eepe = 1, eempe = 2, eerie = 3, eepm0 = 4, eepm1 = 5,
    eedr = 0x40,
    eear = 0x41, eearl = 0x41, eearh = 0x42,
    gtccr = 0x43, psrsync = 0, psrasy = 1, tsm = 7,
    tccr0a = 0x44, wgm00 = 0, wgm01 = 1, com0b0 = 4, com0b1 = 5, com0a0 = 6, com0a1 = 7,
    tccr0b = 0x45, cs00 = 0, cs01 = 1, cs02 = 2, wgm02 = 3, foc0b = 6, foc0a = 7,
    tcnt0 = 0x46,
    ocr0a = 0x47,
    ocr0b = 0x48,

    //PLL
    pllcsr = 0x49, plock = 0, plle = 1, pllp0 = 2, pllp1 = 3, pllp2 = 4,

    //GPIO
    gpior1 = 0x4a,
    gpior2 = 0x4b,

    spcr = 0x4c, spr0 = 0, spr1 = 1, cpha = 2, cpol = 3, mstr = 4, dord = 5, spe = 6, spie = 7,
    spsr = 0x4d, spi2x = 0, wcol = 6, spif = 7,
    spdr = 0x4e,
    acsr = 0x50, acis0 = 0, acis1 = 1, acic = 2, acie = 3, aci = 4,
    mondr = 0x51,
    ocdr = 0x51,
    smcr = 0x53,
    eicra = 0x69,
        isc00 = 0, isc01 = 1, isc10 = 2, isc11 = 3, isc20 = 4, isc21 = 5, isc30 = 6, isc31 = 7,
    timsk0 = 0x6e, toie0 = 0, ocie0a = 1, ocie0b = 2,
    timsk1 = 0x6f, toie1 = 0, ocie1a = 1, ocie1b = 2, ocie1c = 3, icie1 = 5,
    timsk2 = 0x70, toie2 = 0, ocie2a = 1, ocie2b = 2,
    timsk3 = 0x71, toie3 = 0, ocie3a = 1, ocie3b = 2, ocie3c = 3, icie3 = 5,
    adc = 0x78, adcw = 0x78, adcl = 0x78, adch = 0x79,
    adcsra = 0x7a,
        adps0 = 0, adps1 = 1, adps2 = 2, adie = 3, adif = 4, adate = 5, adsc = 6, aden = 7,
    adcsrb = 0x7b, adts0 = 0, adts1 = 1, adts2 = 2, acme = 6, adhsm = 7,
    admux = 0x7c,
        mux0 = 0, mux1 = 1, mux2 = 2, mux3 = 3, mux4 = 4, adlar = 5, refs0 = 6, refs1 = 7,
    tccr1a = 0x80,
        wgm10 = 0, wgm11 = 1, com1c0 = 2, com1c1 = 3,
        com1b0 = 4, com1b1 = 5, com1a0 = 6, com1a1 = 7,
    tccr1b = 0x81, cs10 = 0, cs11 = 1, cs12 = 2, wgm12 = 3, wgm13 = 4, ices1 = 6, icnc1 = 7,
    tccr1c = 0x82, foc1c = 5, foc1b = 6, foc1a = 7,
    tcnt1 = 0x84, tcnt1l = 0x84, tcnt1h = 0x85,
    icr1 = 0x86, icr1l = 0x86, icr1h = 0x87,
    ocr1a = 0x88, ocr1al = 0x88, ocr1ah = 0x89,
    ocr1b = 0x8a,
    ocr1c = 0x8c, ocr1cl = 0x8c, ocr1ch = 0x8d,
    tccr3a = 0x90,
    tccr3b = 0x91,
    tccr3c = 0x92,
    uhcon = 0x9e,
    uhint = 0x9f,
    uhien = 0xa0,
    uhaddr = 0xa1,
    uhfnuml = 0xa2,
    uhfnumh = 0xa3,
    upstax = 0xac,
    upienx = 0xae,
    tccr2a = 0xb0, wgm20 = 0, wgm21 = 1, com2b0 = 4, com2b1 = 5, com2a0 = 6, com2a1 = 7,
    tccr2b = 0xb1, cs20 = 0, cs21 = 1, cs22 = 2, wgm22 = 3, foc2b = 6, foc2a = 7,
    tcnt2 = 0xb2,
    ocr2a = 0xb3,
    ocr2b = 0xb4,
    assr = 0xb6,
    twbr = 0xb8,
    twar = 0xba,
    twdr = 0xbb,
    ucsr1a = 0xc8,
        mpcm1 = 0, u2x1 = 1, upe1 = 2, dor1 = 3, fe1 = 4, udre1 = 5, txc1 = 6, rxc1 = 7,
    ucsr1b = 0xc9,
        txb81 = 0, rxb81 = 1, ucsz12 = 2, txen1 = 3,
        rxen1 = 4, udrie1 = 5, txcie1 = 6, rxcie1 = 7,
    ucsr1c = 0xca,
        ucpol1 = 0, ucsz10 = 1, ucsz11 = 2, usbs1 = 3,
        upm10 = 4, upm11 = 5, umsel10 = 6, umsel11 = 7,
    ubrr1 = 0xcc,
    ubrr1l = 0xcc,
    ubrr1h = 0xcd,
    udr1 = 0xce,
    uhwcon = 0xd7, uimod = 7, uide = 6, uvcone = 4, uvrege = 0,
    usbcon = 0xd8, usbe = 7, host = 6, frzclk = 5, otgpade = 4, idte = 1, vbuste = 0,
    usbsta = 0xd9, speed = 3, id = 1, vbus = 0,
    usbint = 0xda, idti = 1, vbusti = 0,
    udpadd = 0xdb,
    udpaddl = 0xdb,
    udpaddh = 0xdc,
    udcon = 0xe0, lsm = 2, rmwkup = 1, detach = 0,
    udint = 0xe1, uprsmi = 6, eorsmi = 5, wakeupi = 4, eorsti = 3, sofi = 2, suspi = 0,
    udien = 0xe2, uprsme = 6, eorsme = 5, wakeupe = 4, eorste = 3, sofe = 2, suspe = 0,
    udaddr = 0xe3, adden = 7,
    udfnum = 0xe4, udfnuml = 0xe4, udfnumh = 0xe5,
    udmfn = 0xe6,
    udtst = 0xe7, opmode2 = 5, tstpckt = 4, tstk = 3, tstj = 2,
    ueintx = 0xe8,
        fifocon = 7, nakini = 6, rwal = 5, nakouti = 4, rxstpi = 3, rxouti = 2,
        stalledi = 1, txini = 0,
    uenum = 0xe9,
    uerst = 0xea,
    ueconx = 0xeb, stallrq = 5, stallrqc = 4, rstdt = 3, epen = 0,
    uecfg0x = 0xec, eptype1 = 7, eptype0 = 6, epdir = 0,
    uecfg1x = 0xed, epsize2 = 6, epsize1 = 5, epsize0 = 4, epbk1 = 3, epbk0 = 2, alloc = 1,
    ueienx = 0xf0, txine = 0, stallede = 1, rxoute = 2, rxstpe = 3, nakroute = 4, nakine = 6,
        flerre = 7,
    uedatx = 0xf1,
    uebclx = 0xf2,
    uebchx = 0xf3,
    ueint = 0xf4,

    ocr0a_port_base = portb_base,
    ocr0a_ddr = ocr0a_port_base + 1,
    ocr0a_bit = pb7,
    ocr0b_port_base = portd_base,
    ocr0b_ddr = ocr0b_port_base + 1,
    ocr0b_bit = pd0,
    ocr1a_port_base = portb_base,
    ocr1a_in = ocr1a_port_base + 0,
    ocr1a_ddr = ocr1a_port_base + 1,
    ocr1a_port = ocr1a_port_base + 2,
    ocr1a_bit = pb5,
    ocr1b_port_base = portb_base,
    ocr1b_in = ocr1b_port_base + 0,
    ocr1b_ddr = ocr1b_port_base + 1,
    ocr1b_port = ocr1b_port_base + 2,
    ocr1b_bit = pb6,
    ocr2a_port_base = portb_base,
    ocr2a_ddr = ocr2a_port_base + 1,
    ocr2a_port = ocr2a_port_base + 2,
    ocr2a_bit = pb4,
    ocr2b_port_base = portd_base,
    ocr2b_ddr = ocr2b_port_base + 1,
    ocr2b_port = ocr2b_port_base + 2,
    ocr2b_bit = pd1,

    int0_port_base = portd_base,
    int0_ddr = int0_port_base + 1,
    int0_port = int0_port_base + 2,
    int0_bit = pd0,

    ss_port_base = portb_base,
    ss_ddr = ss_port_base + 1,
    ss_port = ss_port_base + 2,
    ss_bit = pb0,
    sck_port_base = portb_base,
    sck_ddr = sck_port_base + 1,
    sck_port = sck_port_base + 2,
    sck_bit = pb1,
    mosi_port_base = portb_base,
    mosi_ddr = mosi_port_base + 1,
    mosi_port = mosi_port_base + 2,
    mosi_bit = pb2,
    miso_port_base = portb_base,
    miso_in = miso_port_base + 0,
    miso_ddr = miso_port_base + 1,
    miso_port = miso_port_base + 2,
    miso_bit = pb3;

static volatile uint8_t
    * const p_porta_base = (volatile uint8_t * const)porta_base,
    * const p_pina = (volatile uint8_t * const)pina,
    * const p_ddra = (volatile uint8_t * const)ddra,
    * const p_porta = (volatile uint8_t * const)porta,
    * const p_portb_base = (volatile uint8_t * const)portb_base,
    * const p_pinb = (volatile uint8_t * const)pinb,
    * const p_ddrb = (volatile uint8_t * const)ddrb,
    * const p_portb = (volatile uint8_t * const)portb,
    * const p_portc_base = (volatile uint8_t * const)portc_base,
    * const p_pinc = (volatile uint8_t * const)pinc,
    * const p_ddrc = (volatile uint8_t * const)ddrc,
    * const p_portc = (volatile uint8_t * const)portc,
    * const p_portd_base = (volatile uint8_t * const)portd_base,
    * const p_pind = (volatile uint8_t * const)pind,
    * const p_ddrd = (volatile uint8_t * const)ddrd,
    * const p_portd = (volatile uint8_t * const)portd,
    * const p_porte_base = (volatile uint8_t * const)porte_base,
    * const p_ddre = (volatile uint8_t * const)ddre,
    * const p_pinf = (volatile uint8_t * const)pinf,
    * const p_ddrf = (volatile uint8_t * const)ddrf,
    * const p_portf = (volatile uint8_t * const)portf,
    * const p_tifr0 = (volatile uint8_t * const)tifr0,
    * const p_tifr1 = (volatile uint8_t * const)tifr1,
    * const p_tifr2 = (volatile uint8_t * const)tifr2,
    * const p_tifr3 = (volatile uint8_t * const)tifr3,
    * const p_eimsk = (volatile uint8_t * const)eimsk,
    * const p_tccr0a = (volatile uint8_t * const)tccr0a,
    * const p_tccr0b = (volatile uint8_t * const)tccr0b,
    * const p_tcnt0 = (volatile uint8_t * const)tcnt0,
    * const p_ocr0a = (volatile uint8_t * const)ocr0a,
    * const p_ocr0b = (volatile uint8_t * const)ocr0b,
    * const p_pllcsr = (volatile uint8_t * const)pllcsr,
    * const p_gpior1 = (volatile uint8_t * const)gpior1,
    * const p_gpior2 = (volatile uint8_t * const)gpior2,
    * const p_spcr = (volatile uint8_t * const)spcr,
    * const p_spsr = (volatile uint8_t * const)spsr,
    * const p_spdr = (volatile uint8_t * const)spdr,
    * const p_eicra = (volatile uint8_t * const)eicra,
    * const p_timsk0 = (volatile uint8_t * const)timsk0,
    * const p_timsk1 = (volatile uint8_t * const)timsk1,
    * const p_timsk2 = (volatile uint8_t * const)timsk2,
    * const p_timsk3 = (volatile uint8_t * const)timsk3,
    * const p_adcl = (volatile uint8_t * const)adcl,
    * const p_adch = (volatile uint8_t * const)adch,
    * const p_adcsra = (volatile uint8_t * const)adcsra,
    * const p_adcsrb = (volatile uint8_t * const)adcsrb,
    * const p_admux = (volatile uint8_t * const)admux,
    * const p_tccr1a = (volatile uint8_t * const)tccr1a,
    * const p_tccr1b = (volatile uint8_t * const)tccr1b,
    * const p_tccr1c = (volatile uint8_t * const)tccr1c,
    * const p_tccr3a = (volatile uint8_t * const)tccr3a,
    * const p_tccr3b = (volatile uint8_t * const)tccr3b,
    * const p_tccr3c = (volatile uint8_t * const)tccr3c,
    * const p_tccr2a = (volatile uint8_t * const)tccr2a,
    * const p_tccr2b = (volatile uint8_t * const)tccr2b,
    * const p_tcnt2 = (volatile uint8_t * const)tcnt2,
    * const p_ocr2a = (volatile uint8_t * const)ocr2a,
    * const p_ocr2b = (volatile uint8_t * const)ocr2b,
    * const p_assr = (volatile uint8_t * const)assr,
    * const p_twbr = (volatile uint8_t * const)twbr,
    * const p_twar = (volatile uint8_t * const)twar,
    * const p_twdr = (volatile uint8_t * const)twdr,
    * const p_ucsr1a = (volatile uint8_t * const)ucsr1a,
    * const p_ucsr1b = (volatile uint8_t * const)ucsr1b,
    * const p_ucsr1c = (volatile uint8_t * const)ucsr1c,
    * const p_udr1 = (volatile uint8_t * const)udr1,
    * const p_uhwcon = (volatile uint8_t * const)uhwcon,
    * const p_usbcon = (volatile uint8_t * const)usbcon,
    * const p_usbsta = (volatile uint8_t * const)usbsta,
    * const p_usbint = (volatile uint8_t * const)usbint,
    * const p_udcon = (volatile uint8_t * const)udcon,
    * const p_udint = (volatile uint8_t * const)udint,
    * const p_udien = (volatile uint8_t * const)udien,
    * const p_udaddr = (volatile uint8_t * const)udaddr,
    * const p_ueintx = (volatile uint8_t * const)ueintx,
    * const p_uenum = (volatile uint8_t * const)uenum,
    * const p_uerst = (volatile uint8_t * const)uerst,
    * const p_ueconx = (volatile uint8_t * const)ueconx,
    * const p_uecfg0x = (volatile uint8_t * const)uecfg0x,
    * const p_uecfg1x = (volatile uint8_t * const)uecfg1x,
    * const p_ueienx = (volatile uint8_t * const)ueienx,
    * const p_uedatx = (volatile uint8_t * const)uedatx,
    * const p_uebclx = (volatile uint8_t * const)uebclx,
    * const p_uebchx = (volatile uint8_t * const)uebchx,

    * const p_ocr0a_ddr = (volatile uint8_t * const)ocr0a_ddr,
    * const p_ocr0b_ddr = (volatile uint8_t * const)ocr0b_ddr,
    * const p_ocr1a_ddr = (volatile uint8_t * const)ocr1a_ddr,
    * const p_ocr1b_ddr = (volatile uint8_t * const)ocr1b_ddr,
    * const p_ocr2b_ddr = (volatile uint8_t * const)ocr2b_ddr,
    
    * const p_int0_ddr = (volatile uint8_t * const)int0_ddr,
    * const p_int0_port = (volatile uint8_t * const)int0_port,
    
    * const p_ss_ddr = (volatile uint8_t * const)ss_ddr,
    * const p_ss_port = (volatile uint8_t * const)ss_port,
    * const p_sck_ddr = (volatile uint8_t * const)sck_ddr,
    * const p_sck_port = (volatile uint8_t * const)sck_port,
    * const p_mosi_ddr = (volatile uint8_t * const)mosi_ddr,
    * const p_mosi_port = (volatile uint8_t * const)mosi_port,
    * const p_miso_ddr = (volatile uint8_t * const)miso_ddr,
    * const p_miso_port = (volatile uint8_t * const)miso_port;

static volatile uint16_t
    * const p_tcnt1 = (volatile uint16_t * const)tcnt1,
    * const p_icr1 = (volatile uint16_t * const)icr1,
    * const p_ocr1a = (volatile uint16_t * const)ocr1a,
    * const p_ocr1b = (volatile uint16_t * const)ocr1b,
    * const p_ocr1c = (volatile uint16_t * const)ocr1c,
    * const p_ubrr1 = (volatile uint16_t * const)ubrr1,
    * const p_udfnum = (volatile uint16_t * const)udfnum;

#endif


