#ifndef _ZESTIEN_H_
#define _ZESTIEN_H_
#include "pinport.h"

static constexpr uint8_t
    portb_base = 0x23,
        pinb = portb_base,
            pinb0 = 0, pinb1 = 1, pinb2 = 2, pinb3 = 3,
            pinb4 = 4, pinb5 = 5, pinb6 = 6, pinb7 = 7,
        ddrb = portb_base + 1,
            ddb0 = 0, ddb1 = 1, ddb2 = 2, ddb3 = 3, ddb4 = 4, ddb5 = 5, ddb6 = 6, ddb7 = 7,
        portb = portb_base + 2,
            portb0 = 0, portb1 = 1, portb2 = 2, portb3 = 3,
            portb4 = 4, portb5 = 5, portb6 = 6, portb7 = 7,
            pb0 = 0, pb1 = 1, pb2 = 2, pb3 = 3, pb4 = 4, pb5 = 5, pb6 = 6, pb7 = 7,
    portc_base = 0x26,
        pinc = portc_base,
            pinc0 = 0, pinc1 = 1, pinc2 = 2, pinc3 = 3,
            pinc4 = 4, pinc5 = 5, pinc6 = 6, pinc7 = 7,
        ddrc = portc_base + 1,
        portc = portc_base + 2,
            portc0 = 0, portc1 = 1, portc2 = 2, portc3 = 3,
            portc4 = 4, portc5 = 5, portc6 = 6, portc7 = 7,
            pc0 = 0, pc1 = 1, pc2 = 2, pc3 = 3, pc4 = 4, pc5 = 5, pc6 = 6, pc7 = 7,
    portd_base = 0x29,
        pind = portd_base,
            pind0 = 0, pind1 = 1, pind2 = 2, pind3 = 3,
            pind4 = 4, pind5 = 5, pind6 = 6, pind7 = 7,
        ddrd = portd_base + 1,
            ddd0 = 0, ddd1 = 1, ddd2 = 2, ddd3 = 3,
            ddd4 = 4, ddd5 = 5, ddd6 = 6, ddd7 = 7,
        portd = portd_base + 2,
            portd0 = 0, portd1 = 1, portd2 = 2, portd3 = 3,
            portd4 = 4, portd5 = 5, portd6 = 6, portd7 = 7,
            pd0 = 0, pd1 = 1, pd2 = 2, pd3 = 3, pd4 = 4, pd5 = 5, pd6 = 6, pd7 = 7,
    tifr0 = 0x35, tov0 = 0, ocf0a = 1, ocf0b = 2,
    tifr1 = 0x36, tov1 = 0, ocf1a = 1, ocf1b = 2, ocf1c = 3, icf1 = 5,
    pcifr = 0x3b, pcif0 = 0, pcif1 = 1,
    eifr = 0x3c,
    eimsk = 0x3d, int0 = 0, int1 = 1, int2 = 2, int3 = 3, int4 = 4, int5 = 5, int6 = 6, int7 = 7,
    gpior0 = 0x3e,
    eecr = 0x3f,
    eedr = 0x40,
    tccr0a = 0x44, wgm00 = 0, wgm01 = 1, com0b0 = 4, com0b1 = 5, com0a0 = 6, com0a1 = 7,
    tccr0b = 0x45, cs00 = 0, cs01 = 1, cs02 = 2, wgm02 = 3, foc0b = 6, foc0a = 7,
    tcnt0 = 0x46,
    ocr0a = 0x47,
    ocr0b = 0x48,
    pllcsr = 0x49,
    gpior1 = 0x4a,
    gpior2 = 0x4b,
    spcr = 0x4c, spr0 = 0, spr1 = 1, cpha = 2, cpol = 3, mstr = 4, dord = 5, spe = 6, spie = 7,
    spsr = 0x4d, spi2x = 0, wcol = 6, spif = 7,
    spdr = 0x4e,
    acsr = 0x50,
    dwdr = 0x51,
    smcr = 0x53,
    mcusr = 0x54,
    mcucr = 0x55,
    spmcsr = 0x57,
    eind = 0x5c,
    wdtcsr = 0x60,
    clkpr = 0x61,
    wdtckd = 0x62,
    regcr = 0x63,
    prr0 = 0x64,
    prr1 = 0x65,
    osccal = 0x66,
    pctcr = 0x68,
    eicra = 0x69,
        isc00 = 0, isc01 = 1, isc10 = 2, isc11 = 3, isc20 = 4, isc21 = 5, isc30 = 6, isc31 = 7,
    eicrb = 0x6a,
    pcmsk0 = 0x6b,
    pcmsk1 = 0x6c,
    timsk0 = 0x6e, toie0 = 0, ocie0a = 1, ocie0b = 2,
    timsk1 = 0x6f, toie1 = 0, ocie1a = 1, ocie1b = 2, ocie1c = 3, icie1 = 5,
    didr1 = 0x7f,
    tccr1a = 0x80,
        wgm10 = 0, wgm11 = 1, com1c0 = 2, com1c1 = 3,
        com1b0 = 4, com1b1 = 5, com1a0 = 6, com1a1 = 7,
    tccr1b = 0x81, cs10 = 0, cs11 = 1, cs12 = 2, wgm12 = 3, wgm13 = 4, iges1 = 6, icnc1 = 7,
    tccr1c = 0x82,
    tcnt1 = 0x84,
    icr1 = 0x86,
    ocr1a = 0x88,
    ocr1b = 0x8a,
    ocr1c = 0x8c,
    ucsr1a = 0xc8,
        mpcm1 = 0, u2x1 = 1, upe1 = 2, dor1 = 3, fe1 = 4, udre1 = 5, txc1 = 6, rxc1 = 7,
    ucsr1b = 0xc9,
        txb81 = 0, rxb81 = 1, ucsz12 = 2, txen1 = 3,
        rxen1 = 4, udrie1 = 5, txcie1 = 6, rxcie1 = 7,
    ucsr1c = 0xca,
        ucpol1 = 0, ucsz10 = 1, ucsz11 = 2, usbs1 = 3,
        upm10 = 4, upm11 = 5, umsel10 = 6, umsel11 = 7,
    ucsr1d = 0xcb, rtsen = 0, ctsen = 1,
    ubrr1 = 0xcc, ubrr1l = 0xcc, ubrr1h = 0xcd,
    udr1 = 0xce,
    clksel0 = 0xd0,
    clksel1 = 0xd1,
    udcon = 0xe0,
    udint = 0xe1,
    udien = 0xe2,
    udaddr = 0xe3, adden = 7,
    udfnum = 0xe4, udfnuml = 0xe4, udfnumh = 0xe5,
    udmfn = 0xe6,
    ueintx = 0xe8,
    uenum = 0xe9,
    uerst = 0xea,
    ueconx = 0xeb,
    uecfg0x = 0xec,
    uecfg1x = 0xed,
    uesta0x = 0xee,
    uedatx = 0xf1,
    uebclx = 0xf2,
    ueint = 0xf4,

    ucsr9a = ucsr1a,
        mpcm9 = 0, u2x9 = 1, upe9 = 2, dor9 = 3, fe9 = 4, udre9 = 5, txc9 = 6, rxc9 = 7,
    ucsr9b = ucsr1b,
        txb89 = 0, rxb89 = 1, ucsz92 = 2, txen9 = 3,
        rxen9 = 4, udrie9 = 5, txcie9 = 6, rxcie9 = 7,
    ucsr9c = ucsr1c,
        ucpol9 = 0, ucsz90 = 1, ucsz91 = 2, usbs9 = 3,
        upm90 = 4, upm91 = 5, umsel90 = 6, umsel91 = 7,
    ucsr9d = ucsr1d,
    ubrr9 = ubrr1, ubrr9l = ubrr1l, ubrr9h = ubrr1h,
    udr9 = udr1,

    ocr1a_base = portc_base,
    ocr1a_in = ocr1a_base + 0,
    ocr1a_ddr = ocr1a_base + 1,
    ocr1a_port = ocr1a_base + 2,
    ocr1a_bit = pc6,
    ocr1b_base = portc_base,
    ocr1b_in = ocr1b_base + 0,
    ocr1b_ddr = ocr1b_base + 1,
    ocr1b_port = ocr1b_base + 2,
    ocr1b_bit = pc5,

    int0_base = portd_base,
    int0_in = int0_base + 0,
    int0_ddr = int0_base + 1,
    int0_port = int0_base + 2,
    int0_bit = pd0,

    ss_port_base = portb_base,
    ss_in = ss_port_base + 0,
    ss_ddr = ss_port_base + 1,
    ss_port = ss_port_base + 2,
    ss_bit = pb0,
    sck_base = portb_base,
    sck_in = sck_base + 0,
    sck_ddr = sck_base + 1,
    sck_port = sck_base + 2,
    sck_bit = pb1,
    mosi_base = portb_base,
    mosi_in = mosi_base + 0,
    mosi_ddr = mosi_base + 1,
    mosi_port = mosi_base + 2,
    mosi_bit = pb2,
    miso_base = portb_base,
    miso_in = miso_base + 0,
    miso_ddr = miso_base + 1,
    miso_port = miso_base + 2,
    miso_bit = pb3,

    // random pinmap; er is immers geen Arduino met 16u2
    pin4_base = portb_base,
    pin4_bit = pb3,
    pin5_base = portb_base,
    pin5_bit = pb2,
    pin6_base = portb_base,
    pin6_bit = pb1,
    pin7_base = portb_base,
    pin7_bit = pb0,
    pin8_base = portb_base,
    pin8_bit = pd1,
    pin9_base = portd_base,
    pin9_bit = pd0,
    pin10_base = portd_base,
    pin10_in = pin10_base + 0,
    pin10_ddr = pin10_base + 1,
    pin10_port = pin10_base + 2,
    pin10_bit = pd2,
    pin11_base = portd_base,
    pin11_bit = pd4,
    pin13_base = portd_base,
    pin13_in = pin13_base + 0,
    pin13_ddr = pin13_base + 1,
    pin13_port = pin13_base + 2,
    pin13_bit = pd3;

static volatile uint8_t
    * const p_portb_base = (volatile uint8_t * const)portb_base,
    * const p_pinb = (volatile uint8_t * const)pinb,
    * const p_ddrb = (volatile uint8_t * const)ddrb,
    * const p_portb = (volatile uint8_t * const)portb,
    * const p_portc_base = (volatile uint8_t * const)portc_base,
    * const p_pinc = (volatile uint8_t * const)pinc,
    * const p_ddrc = (volatile uint8_t * const)ddrc,
    * const p_portc = (volatile uint8_t * const)portc,
    * const p_portd_base = (volatile uint8_t * const)portd_base,
    * const p_pind = (volatile uint8_t * const)pind,
    * const p_ddrd = (volatile uint8_t * const)ddrd,
    * const p_portd = (volatile uint8_t * const)portd,
    * const p_tifr0 = (volatile uint8_t * const)tifr0,
    * const p_tifr1 = (volatile uint8_t * const)tifr1,
    * const p_eimsk = (volatile uint8_t * const)eimsk,
    * const p_gpior0 = (volatile uint8_t * const)gpior0,
    * const p_tccr0a = (volatile uint8_t * const)tccr0a,
    * const p_tccr0b = (volatile uint8_t * const)tccr0b,
    * const p_tcnt0 = (volatile uint8_t * const)tcnt0,
    * const p_ocr0a = (volatile uint8_t * const)ocr0a,
    * const p_ocr0b = (volatile uint8_t * const)ocr0b,
    * const p_gpior1 = (volatile uint8_t * const)gpior1,
    * const p_gpior2 = (volatile uint8_t * const)gpior2,
    * const p_spcr = (volatile uint8_t * const)p_spcr,
    * const p_spsr = (volatile uint8_t * const)p_spsr,
    * const p_spdr = (volatile uint8_t * const)p_spdr,
    * const p_eicra = (volatile uint8_t * const)eicra,
    * const p_eicrb = (volatile uint8_t * const)eicrb,
    * const p_timsk0 = (volatile uint8_t * const)timsk0,
    * const p_tccr1a = (volatile uint8_t * const)tccr1a,
    * const p_tccr1b = (volatile uint8_t * const)tccr1b,
    * const p_udaddr = (volatile uint8_t * const)udaddr,
    * const p_uenum = (volatile uint8_t * const)uenum,
    * const p_uerst = (volatile uint8_t * const)uerst,
    * const p_uedatx = (volatile uint8_t * const)uedatx,
    * const p_uebclx = (volatile uint8_t * const)uebclx,

    * const p_ucsr9a = (volatile uint8_t * const)ucsr9a,
    * const p_ucsr9b = (volatile uint8_t * const)ucsr9b,
    * const p_ucsr9c = (volatile uint8_t * const)ucsr9c,
    * const p_ucsr9d = (volatile uint8_t * const)ucsr9d,
    * const p_ubrr9l = (volatile uint8_t * const)ubrr9l,
    * const p_ubrr9h = (volatile uint8_t * const)ubrr9h,
    * const p_udr9 = (volatile uint8_t * const)udr9,

    * const p_ocr1a_ddr = (volatile uint8_t * const)ocr1a_ddr,
    * const p_ocr1b_ddr = (volatile uint8_t * const)ocr1b_ddr,

    * const p_int0_ddr = (volatile uint8_t * const)int0_ddr,
    * const p_int0_port = (volatile uint8_t * const)int0_port,

    * const p_ss_in = (volatile uint8_t * const)ss_in,
    * const p_ss_ddr = (volatile uint8_t * const)ss_ddr,
    * const p_ss_port = (volatile uint8_t * const)ss_port,
    * const p_sck_ddr = (volatile uint8_t * const)sck_ddr,
    * const p_sck_port = (volatile uint8_t * const)sck_port,
    * const p_port_sck = (volatile uint8_t * const)sck_port,
    * const p_mosi_ddr = (volatile uint8_t * const)mosi_ddr,
    * const p_mosi_port = (volatile uint8_t * const)mosi_port,
    * const p_miso_ddr = (volatile uint8_t * const)miso_ddr,
    * const p_miso_port = (volatile uint8_t * const)miso_port,

    * const p_pin13_base = (volatile uint8_t * const)pin13_base,
    * const p_pin13_ddr = (volatile uint8_t * const)pin13_ddr,
    * const p_pin13_port = (volatile uint8_t * const)pin13_port;

static volatile uint16_t
    * const p_ocr1a = (volatile uint16_t * const)ocr1a,
    * const p_icr1 = (volatile uint16_t * const)icr1,
    * const p_ubrr1 = (volatile uint16_t * const)ubrr1,
    * const p_ubrr9 = (volatile uint16_t * const)ubrr9;

struct Board
{
    Port
        portB { p_portb_base },
        portC { p_portc_base },
        portD { p_portd_base };

    Pin
        pin4 {portB, pin4_bit},
        pin5 {portB, pin5_bit},
        pin6 {portB, pin6_bit},
        pin7 {portB, pin7_bit},
        pin8 {portD, pin8_bit},
        pin9 {portD, pin9_bit},
        pin11 {portD, pin11_bit},
        pin13 {portD, pin13_bit};
};

#define INTR0 __vector_1()
#define INTR1 __vector_2()
#define TIMER0_COMPA __vector_19()
#define TIMER0_OVF __vector_21()
#define USART1_RX __vector_23()
#define USART_RX USART1_RX

#endif



